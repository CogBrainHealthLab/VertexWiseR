% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vertmixedTFCE.R
\name{TFCE.vertex_analysis.mixed}
\alias{TFCE.vertex_analysis.mixed}
\title{Vertex-wise analysis with TFCE (mixed effect)}
\usage{
TFCE.vertex_analysis.mixed(
  model,
  contrast,
  surf_data,
  random,
  nperm = 100,
  tail = 2,
  nthread = 10,
  smooth_FWHM,
  perm_within_between = F
)
}
\arguments{
\item{model}{A data.frame object containing the variables to include in the model at each column, and rows of values assigned to each participant.}

\item{contrast}{An object containing the values of the independent variable of interest for which to fit a contrast}

\item{surf_data}{A matrix object containing the surface data, see SURFvextract() output format.}

\item{random}{An object containing the values of the random variable}

\item{nperm}{A numeric integer object stating the number of permutations wanted for the cluster-correction (default = 100)}

\item{tail}{A numeric integer object stating whether to test a one-sided (1,-1) or two-sided (2) model}

\item{nthread}{Maximum number of cpu cores to allocate}

\item{smooth_FWHM}{A numeric vector object containing the desired smoothing width in mm}

\item{perm_within_between}{A logical object stating whether to implement a permutation function for random subject effects}
}
\value{
A list object containing  the threshold t-test, the TFCE cluster output, and permuted TFCE cluster maps.
}
\description{
Fits a model with the whole-brain and hippocampal surface data in template space. The data is smoothed and fit to a linear model with mixed effects, and returns a brain-wide or hippocampal t-value maps, as well as cluster-corrected maps with threshold-free cluster enhancement.
}
\details{
The TFCE method for estimating unpermuted TFCE statistics is adapted from the \href{https://github.com/nilearn/nilearn/blob/main/nilearn/mass_univariate/_utils.py#L7C8-L7C8}{nilearn python library}.
}
\examples{
demodata = read.csv(system.file('demo_data/SPRENG_behdata.csv',
package = 'VertexWiseR'))[1:5,]
surf_data = readRDS(file = url(paste0("https://github.com",
"/CogBrainHealthLab/VertexWiseR/blob/main/inst/demo_data/",
"SPRENG_CTv.rds?raw=TRUE")))[1:5,]
model=demodata[,c(2,7)]
contrast=demodata[,7]
random=demodata[,1]

TFCEtwotailed=TFCE.vertex_analysis.mixed(model,contrast,
surf_data,random, nperm = 100,tail = 2, nthread = 2)

results=TFCE.threshold(TFCEtwotailed)
results$cluster_level_results

}
