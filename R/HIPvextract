#' @title HIPvextract
#'
#' @description Extracts hippocampal vertex-wise surface-based measures for each subject in the hippunfold subjects directory, and stores it into a single matrix.
#' @details The function runs system shell commands that will produce in the set subjects directory: 1) a sorted list of subjects "sublist.txt"; 2) a link file to the selected surface fsaverage template. 3) left and right hemisphere .mgh maps outputted by FreeSurfer's mris_preproc.
#'
#' @param sdirpath A string object containing the path to the hipunfold subjects directory.
#' @param filename A string object containing the desired name of the output RDS file.
#' @param measure A string object containing the name of the measure of interest. Options are thickness and area. Default is thickness.
#' @param subj_ID A logical object stating whether to return a list object containing both subject ID and data matrix.
#'
#' @returns A .rds file with a list containing the list of subject IDs (first element) and a surface data matrix object (second element), or a data matrix object. The matrix can be used independently by VertexWiseR statistical analysis functions. Each row corresponds to a subject (in the same order as 1) and contains the left to right hemispheres' vertex-wise values.
#' @examples
#' HIPvextract(sdirpath = "./", filename = "hip_data.RDS", measure = "thickness") 
#' @export

hip.extract=function(sdirpath, filename, measure="thickness", subj_ID = T)
{
  Sys.setenv(SUBJECTS_DIR=sdirpath)
  lh.filelist=list.files(pattern=paste("_hemi-L_space-T1w_den-0p5mm_label-hipp_",measure,".shape.gii",sep=""), recursive=T)
  rh.filelist=gsub(paste("_hemi-L_space-T1w_den-0p5mm_label-hipp_",measure,".shape.gii",sep=""),
                   paste("_hemi-R_space-T1w_den-0p5mm_label-hipp_",measure,".shape.gii",sep=""),
                   lh.filelist)
  sublist=gsub(paste("_hemi-L_space-T1w_den-0p5mm_label-hipp_",measure,".shape.gii",sep=""), 
               "",
               basename(lh.filelist))

  hip_dat=matrix(NA, nrow=NROW(sublist), ncol=14524)

  for (sub in 1:NROW(sublist))
  {
    lh=gifti::readgii(lh.filelist[sub])
    rh=gifti::readgii(rh.filelist[sub])
    hip_dat[sub,]=c(lh$data$normal,rh$data$normal)
  }

  hip_dat=hip_dat[order(sublist),]
    if(subj_ID==T)
    {
    saveRDS(list(sublist,hip_dat), file=filename)
    } else
    {
    saveRDS(hip_dat, file=filename)
    }
}

